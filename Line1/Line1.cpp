#include <iostream>
#include <locale.h>
#include <stdlib.h>
using namespace std;

/* Рассмотрим на практике циклы while и do_while. Напишем программу, отображающую на экране линию из заданного количества символов.
Выбор цикла между while и do_while зависит от логики работы программы. Если пользователь собирается воспользоваться программой как минимум один раз, то лучше использо-
вать цикл do_while чтобы сначала что-то сделать, а потом спросить пользователя продолжить ли действие или нет. Также можно сперва проверить какое-то условие и потом ра-
ботать в цикле (while). */

int main()
{
    setlocale(LC_ALL, "rus");
    cout << "-----------------------------------Программа, выводящая на экран линию из символов с заданным количеством!---------------------------------------" << endl;
    char Symbol = '+';
    int i = 0, Obsch_kolicestvo = 0;                                   // счетчик будет считать кол-во символов (счетчик символов в ЛИНИИ!)

    while (Symbol != '0')                                              // внешний цикл повторной работы программы (тут лучше do_while, но сделаем while для обучения)
    {
        cout << "Введите символ: "; cin >> Symbol;
        do
        {
            cout << "Введите количество символов больше нуля: "; cin >> Obsch_kolicestvo;
            if (Obsch_kolicestvo <= 0)cout << "Количество символов должно быть больше нуля! Повторите ввод." << endl;
        } while (Obsch_kolicestvo <= 0);

        while (i < Obsch_kolicestvo)
        {
            cout << Symbol;
            i++;
        }
        cout << "\nДля выхода введите 0, для продолжения введите любой символ!" << endl;
        cin >> Symbol;

        // После этого, для повторной работы нашей программы нам нужно очистить экран и привести счетчик i в начальное состояние (обнулить), т.к. он создан не в цикле.
        i = 0;
        system("cls");
    }
}
/* Есть еще вариант - уменьшать количество символов (i--), используя количество символов как счентчик (без дополнительного счетчика). Рассмотрим это в Line2.0.
Но если нам количество это где-то придется использовать, то счетчик лучше сделать отдельно. */